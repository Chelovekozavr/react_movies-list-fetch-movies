{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/findMovies.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","movieTitle","findMovieTitle","notFound","setNotFound","foundMovie","previewFoundMoive","handleSubmit","a","fetch","then","json","Response","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","App","data","addNewMovie","movieToAdd","some","ReactDOM","render","document","getElementById"],"mappings":"ixEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,wCCJ3BG,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACJC,mBAAS,IADL,mBAClCC,EADkC,KACtBC,EADsB,OAETF,oBAAS,GAFA,mBAElCG,EAFkC,KAExBC,EAFwB,OAGDJ,mBAASP,EAAO,IAHf,mBAGlCY,EAHkC,KAGtBC,EAHsB,KAKnCC,EAAY,uCAAG,4BAAAC,EAAA,sECTYxB,EDUQiB,ECTlCQ,MAAM,GAAD,OAHV,0DAGU,OAAsBzB,IAC/B0B,MAAK,SAAAjB,GAAM,OAAIA,EAAOkB,UDOJ,UAGI,WAFjBhB,EADa,QAGTiB,UAAyBX,EAHhB,uBAIjBG,GAAY,GAJK,0BASnBE,EAAkB,CAChBtB,MAAOW,EAAMkB,MACb5B,YAAaU,EAAMmB,KACnB5B,OAAQS,EAAMoB,OACd5B,QAAQ,8BAAD,OAAgCQ,EAAMqB,OAAtC,KACPnB,OAAQF,EAAMqB,SAdG,iCCThB,IAA4BhC,IDSZ,OAAH,qDAkBlB,OACE,oCACE,0BAAMI,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQ6B,QAAQ,eAAjC,eAIA,yBAAK7B,UAAU,WACb,2BACE8B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZhC,UAAU,kBACViC,MAAOpB,EACPqB,SAAU,SAACC,GACTrB,EAAeqB,EAAMC,OAAOH,OAC5BjB,GAAY,OAKjBD,GACC,uBAAGf,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACE8B,KAAK,SACL9B,UAAU,kBACVqC,QAASlB,GAHX,iBAUF,yBAAKnB,UAAU,WACb,4BACE8B,KAAK,SACL9B,UAAU,oBACVqC,QAAS,WACP1B,EAASM,GACTH,EAAe,MALnB,sBAcN,yBAAKd,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAciB,MElFVqB,EAAM,WAAO,IAAD,EACO1B,mBAAS2B,GADhB,mBAChBlC,EADgB,KACRmC,EADQ,KAWvB,OACE,yBAAKxC,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWW,SAdA,SAAC8B,GACZpC,EAAOqC,MAAK,SAAAnC,GAAK,OAAIkC,EAAWhC,SAAWF,EAAME,WAIrD+B,EAAY,GAAD,mBAAKnC,GAAL,CAAaoC,WCT5BE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ca2e1a95.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\nimport { findMoviesFromOMDb } from '../../api/findMovies';\nimport { MovieCard } from '../MovieCard';\nimport movies from '../../api/movies.json';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [movieTitle, findMovieTitle] = useState('');\n  const [notFound, setNotFound] = useState(false);\n  const [foundMovie, previewFoundMoive] = useState(movies[0]);\n\n  const handleSubmit = async() => {\n    const movie = await findMoviesFromOMDb(movieTitle);\n\n    if (movie.Response === 'False' || !movieTitle) {\n      setNotFound(true);\n\n      return;\n    }\n\n    previewFoundMoive({\n      title: movie.Title,\n      description: movie.Plot,\n      imgUrl: movie.Poster,\n      imdbUrl: `https://www.imdb.com/title/${movie.imdbID}/`,\n      imdbId: movie.imdbID,\n    });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={movieTitle}\n              onChange={(event) => {\n                findMovieTitle(event.target.value);\n                setNotFound(false);\n              }}\n            />\n          </div>\n\n          {notFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleSubmit}\n\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovie(foundMovie);\n                findMovieTitle('');\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard {...foundMovie} />\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","const API_FIND_MOVIES\n  = 'http://www.omdbapi.com/?i=tt3896198&apikey=2cb09ab0&t=';\n\nexport function findMoviesFromOMDb(title) {\n  return fetch(`${API_FIND_MOVIES}${title}`)\n    .then(movies => movies.json());\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, addNewMovie] = useState(data);\n\n  const addMovie = (movieToAdd) => {\n    if (movies.some(movie => movieToAdd.imdbId === movie.imdbId)) {\n      return;\n    }\n\n    addNewMovie([...movies, movieToAdd]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}